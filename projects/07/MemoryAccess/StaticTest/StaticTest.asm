//push-constant-i
//D=111
@111
D=A
//Ram[SP]=D
@SP
A=M
M=D
//SP++
@SP
M=M+1

//push-constant-i
//D=333
@333
D=A
//Ram[SP]=D
@SP
A=M
M=D
//SP++
@SP
M=M+1

//push-constant-i
//D=888
@888
D=A
//Ram[SP]=D
@SP
A=M
M=D
//SP++
@SP
M=M+1

//pop-static-i
//addr<-lcl+i
@8
D=A
@Foo.8
D=D+M
@R13//holdsaddr
M=D
//SP--
@SP
M=M-1
A=M
D=M
//Ram[addr]=Ram[SP]
@R13
A=M
M=D

//pop-static-i
//addr<-lcl+i
@3
D=A
@Foo.3
D=D+M
@R13//holdsaddr
M=D
//SP--
@SP
M=M-1
A=M
D=M
//Ram[addr]=Ram[SP]
@R13
A=M
M=D

//pop-static-i
//addr<-lcl+i
@1
D=A
@Foo.1
D=D+M
@R13//holdsaddr
M=D
//SP--
@SP
M=M-1
A=M
D=M
//Ram[addr]=Ram[SP]
@R13
A=M
M=D

//push-static-i
//addr<-lcl+i
@3
D=A
@Foo.3
D=D+M
A=D
D=M
//Ram[SP]=Ram[addr]
@SP
A=M
M=D
//SP++
@SP
M=M+1

//push-static-i
//addr<-lcl+i
@1
D=A
@Foo.1
D=D+M
A=D
D=M
//Ram[SP]=Ram[addr]
@SP
A=M
M=D
//SP++
@SP
M=M+1

//sub
@SP
M=M-1
@SP
A=M
D=M//D=Ram[SP]
@SP
M=M-1//SP--
@R13
M=D//Ram[13]=D
@SP
A=M
D=M//D=Ram[SP]
@R13
D=D-M//D=D-Ram[13]
@SP
A=M
M=D//Ram[SP]=D
@SP
M=M+1//SP++

//push-static-i
//addr<-lcl+i
@8
D=A
@Foo.8
D=D+M
A=D
D=M
//Ram[SP]=Ram[addr]
@SP
A=M
M=D
//SP++
@SP
M=M+1

//add
@SP
M=M-1//SP--
@SP
A=M
D=M//D=Ram[SP]
@SP
M=M-1//SP--
@R13
M=D//Ram[13]=D
@SP
A=M
D=M//D=Ram[SP]
@R13
D=D+M//D=D+Ram[13]
@SP
A=M
M=D//Ram[SP]=D
@SP
M=M+1//SP++

(END)
@END
0;JMP