//push-constant-i
//D=3030
@3030
D=A
//Ram[SP]=D
@SP
A=M
M=D
//SP++
@SP
M=M+1


//pop-pointer-0
@SP
M=M-1
A=M
D=M
@THIS
M=D

//push-constant-i
//D=3040
@3040
D=A
//Ram[SP]=D
@SP
A=M
M=D
//SP++
@SP
M=M+1


//pop-pointer-1
@SP
M=M-1
A=M
D=M
@THAT
M=D

//push-constant-i
//D=32
@32
D=A
//Ram[SP]=D
@SP
A=M
M=D
//SP++
@SP
M=M+1

//pop-this-i
//addr<-lcl+i
@2
D=A
@THIS
D=D+M
@R13//holdsaddr
M=D
//SP--
@SP
M=M-1
A=M
D=M
//Ram[addr]=Ram[SP]
@R13
A=M
M=D

//push-constant-i
//D=46
@46
D=A
//Ram[SP]=D
@SP
A=M
M=D
//SP++
@SP
M=M+1

//pop-that-i
//addr<-lcl+i
@6
D=A
@THAT
D=D+M
@R13//holdsaddr
M=D
//SP--
@SP
M=M-1
A=M
D=M
//Ram[addr]=Ram[SP]
@R13
A=M
M=D


//push-pointer-0
@THIS
D=M
@SP
A=M
M=D//*SP=THIS
@SP
M=M+1//SP++


//push-pointer-1
@THAT
D=M
@SP
A=M
M=D//*SP=THAT
@SP
M=M+1//SP++

//add
@SP
M=M-1//SP--
@SP
A=M
D=M//D=Ram[SP]
@SP
M=M-1//SP--
@R13
M=D//Ram[13]=D
@SP
A=M
D=M//D=Ram[SP]
@R13
D=D+M//D=D+Ram[13]
@SP
A=M
M=D//Ram[SP]=D
@SP
M=M+1//SP++

//push-this-i
//addr<-lcl+i
@2
D=A
@THIS
D=D+M
A=D
D=M
//Ram[SP]=Ram[addr]
@SP
A=M
M=D
//SP++
@SP
M=M+1

//sub
@SP
M=M-1
@SP
A=M
D=M//D=Ram[SP]
@SP
M=M-1//SP--
@R13
M=D//Ram[13]=D
@SP
A=M
D=M//D=Ram[SP]
@R13
D=D-M//D=D-Ram[13]
@SP
A=M
M=D//Ram[SP]=D
@SP
M=M+1//SP++

//push-that-i
//addr<-lcl+i
@6
D=A
@THAT
D=D+M
A=D
D=M
//Ram[SP]=Ram[addr]
@SP
A=M
M=D
//SP++
@SP
M=M+1

//add
@SP
M=M-1//SP--
@SP
A=M
D=M//D=Ram[SP]
@SP
M=M-1//SP--
@R13
M=D//Ram[13]=D
@SP
A=M
D=M//D=Ram[SP]
@R13
D=D+M//D=D+Ram[13]
@SP
A=M
M=D//Ram[SP]=D
@SP
M=M+1//SP++

(END)
@END
0;JMP